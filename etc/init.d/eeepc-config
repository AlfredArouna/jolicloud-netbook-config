#!/bin/sh
######################################################################
# eeepc v1.3 by Ferry Hendrikx, (c) 2008
#
# System script that automatically configures the appropriate modules
# depending on the Asus Eee PC model number. 
#
# This script will only work on Asus equipment.
#
######################################################################
### BEGIN INIT INFO
# Provides:          eeepc-config
# Required-Start:
# Required-Stop:
# Default-Start:     2 3 4 5
# Default-Stop:      0
# Short-Description: Asus Eee PC configuration
# Description:
### END INIT INFO

set -e

NAME="eeepc-config"
DESC="Asus Eee PC configuration"

LOGFILE="/var/log/eeepc-config"

MODPROBE='/sbin/modprobe'
SYSCTL='/sbin/sysctl'
AMIXER='/usr/bin/amixer'


# Load shared functions

. /lib/lsb/init-functions
. /usr/lib/eeepc-config/functions


# Load defaults

if [ -e /etc/default/eeepc-config ]; then
    . /etc/default/eeepc-config
fi


# Is this a NetBook PC?

if ! isNetBook; then
	exit 0;
fi


######################################################################
# 
# functions
#
######################################################################

set_amixer () {
	SCONTROL="$1"
	shift

	echo "${AMIXER} sset \"${SCONTROL}\" $@" >>${LOGFILE}

	if ! ${AMIXER} sget "${SCONTROL}" >/dev/null 2>>${LOGFILE}; then
		return 0
	fi

	${AMIXER} sset "${SCONTROL}" "$@" >> ${LOGFILE} 2>&1

	return $?;
}


set_sysctl () {
	echo "${SYSCTL} $1=$2" >>${LOGFILE}

	if ! ${SYSCTL} "$1" 2>>${LOGFILE} >/dev/null; then
		return 0;
	fi

	${SYSCTL} -w $1=$2 >> ${LOGFILE}

	return 0;
}


set_sysfs () {
	if [ ! -e $1 ]; then
		echo "Error: cannot find $1" >> ${LOGFILE}
		return 0;
	fi

	echo "$1 = $2" >> ${LOGFILE}
	echo "$2" > "$1" 2>> ${LOGFILE}

	return 0
}


insert_module () {
	if ! ${MODPROBE} -v "$1" >> ${LOGFILE} 2>&1; then
		echo "Cannot load module $1" | tee -a ${LOGFILE}
	fi

	return 0
}


remove_module () {
	${MODPROBE} -r -v "$@" >> ${LOGFILE} 2>&1

	return 0
}


######################################################################
# 
# main
#
######################################################################

do_start () {
	log_action_begin_msg "Starting $NAME"

	echo "Starting /etc/init.d/eeepc-config \"start\": " > ${LOGFILE}
	date >> ${LOGFILE}
	echo >> ${LOGFILE}

	# Since /var/log may be under tmpfs control, some sub-dirs need to
	# be created manually during the boot process.

	if [ ! -d /var/log/apt ]; then
		mkdir -p /var/log/apt
	fi


	# Common settings

	set_sysctl dev.wifi0.ledpin 1
	set_sysctl dev.wifi0.softled 1

	set_sysctl vm.swappiness 0
	set_sysctl vm.dirty_writeback_centisecs 1500


	# Load power_save features on snd_hda_intel but only on 2.6.27 and
	# later. 2.6.24 kernels result in a dead soundcard after the power_save
	# value has elapsed.
	#
	# Enabling power_save with power_save_controller eliminates the need to
	# reload snd_hda_intel on suspend/resume and remove it on shutdown.

	if isKernelLaterThanOrEqualTo "2.6.27"; then
		[ -e /sys/module/snd_hda_intel/parameters/power_save ] &&
			echo 10 > /sys/module/snd_hda_intel/parameters/power_save;
		[ -e /sys/module/snd_hda_intel/parameters/power_save_controller ] &&
			echo Y > /sys/module/snd_hda_intel/parameters/power_save_controller;
	fi


	# Setup sane mixer levels for the front mic

	set_amixer "Input Source" "Front Mic"
	set_amixer "Capture" "80%" "cap" "unmute"
	set_amixer "Front Mic Boost" "30%" "unmute"
	set_amixer "Front Mic" "100%" "mute"


	# Load modules

	# Probing of the network devices will be unnecessary in a
	# future eeepc kernel version.

	# The Attansic(v2) (wired) network drivers are supported by the EeePC
	# 900 and earlier. Attansic(v1) (wired) drivers are supported by the
	# EeePC 900a and later.

	# The Atheros (wireless) network drivers are supported by the 
	# EeePC 900a and earlier. Ralink (wireless) drivers are supported by
	# the EeePC 901 and later.

	if isModelLessThanOrEqualTo "900"; then
		insert_module atl2
	else
		insert_module atl1e
	fi

	if isModelLessThanOrEqualTo "900a"; then
		if isKernelLaterThan "2.6.27"; then
			insert_module ath5k
		else
			insert_module ath_pci
		fi
	else
		insert_module rt2860sta
	fi


	# Note: special snd_hda_intel module options are handled in
	# /etc/modprobe.d/eeepc

	insert_module eeepc_acpi
	insert_module pciehp pciehp_force=1
	insert_module i2c-i801
	insert_module asus_eee

	if isModelLessThanOrEqualTo "900"; then
		insert_module p4_clockmod
	else
		insert_module acpi-cpufreq
	fi


	# Set other configuration options

	if [ "${EEEPC_CPUFREQ_MIN_FREQ}" != "" ]; then
		for i in `find /sys/devices/system/cpu -name scaling_min_freq`; do
			set_sysfs $i ${EEEPC_CPUFREQ_MIN_FREQ}
		done
	fi

	if [ "${EEEPC_CPUFREQ_GOVERNOR}" != "" ]; then
		for i in `find /sys/devices/system/cpu -name scaling_governor`; do
			set_sysfs $i ${EEEPC_CPUFREQ_GOVERNOR}
		done
	fi


	# finished

	echo "Finished /etc/init.d/eeepc-config \"start\": " >> ${LOGFILE}
	date >> ${LOGFILE}
	echo >> ${LOGFILE}

	log_action_end_msg $?
}


do_stop () {
	log_action_begin_msg "Stopping $NAME"

	RUNLEVEL=`runlevel | cut -d ' ' -f 2`

	# If our runlevel is 0, we're actually halting the machine. A bug in
	# snd_hda_intel prevents the Eee PC from powering off if this module 
	# is still loaded. So, unload it.
	#
	# This bug was fixed with BIOS >= 0802. Also, snd_hda_intel must
	# have power_save & power_save_controller parameters set (see
	# /etc/modprobe.d/eeepc) before this unloading becomes unnecessary.

	if isKernelEarlierThan "2.6.27"; then
		if [ "${RUNLEVEL}" = "0" ]; then
			remove_module snd_hda_intel
		fi
	fi


	# finished

	log_action_end_msg $?
}


case "$1" in
	start)
		do_start
		;;
	restart|reload|force-reload)
		do_stop
		do_start
		;;
	stop)
		do_stop
		;;
	*)
		echo "Usage: $0 [start|stop|restart|reload|force-reload]" >&2
		exit 3
		;;
esac

:

# vim:noexpandtab
