#!/bin/sh
######################################################################
# eeepc-config by Ferry Hendrikx, (c) 2008
# jolicloud-netbook-config by Adam McDaniel, (c) 2009
#
# System script that automatically configures the appropriate modules
# depending on the Asus Eee PC model number. 
#
# This script will only work on Asus equipment.
#
######################################################################
### BEGIN INIT INFO
# Provides:          jolicloud-netbook-config
# Required-Start:
# Required-Stop:
# Default-Start:     2 3 4 5
# Default-Stop:      0
# Short-Description: Jolicloud netbook configuration
# Description:
### END INIT INFO

set -e

NAME="jolicloud-netbook-config"
DESC="Jolicloud netbook configuration"

LOGFILE="/var/log/jolicloud-netbook-config"

MODPROBE='/sbin/modprobe'
SYSCTL='/sbin/sysctl'
AMIXER='/usr/bin/amixer -c 0'


# Load shared functions

. /lib/lsb/init-functions
. /usr/lib/jolicloud-netbook-config/functions


# Load defaults

if [ -e /etc/default/jolicloud-netbook-config ]; then
    . /etc/default/jolicloud-netbook-config
fi


## Is this a NetBook PC?
#
#if ! isNetBook; then
#	exit 0;
#fi


######################################################################
# 
# functions
#
######################################################################

set_amixer () {
	SCONTROL="$1"
	shift

	if ! ${AMIXER} sget "${SCONTROL}" >/dev/null 2>>${LOGFILE}; then
		echo "amixer \"${SCONTROL}\" not found" >>${LOGFILE}
		return 0
	fi

	echo "${AMIXER} sset \"${SCONTROL}\" $@" >>${LOGFILE}
	${AMIXER} sset "${SCONTROL}" "$@" >> ${LOGFILE} 2>&1

	return $?;
}


set_sysctl () {
	echo "${SYSCTL} $1=$2" >>${LOGFILE}

	if ! ${SYSCTL} "$1" 2>>${LOGFILE} >/dev/null; then
		return 0;
	fi

	${SYSCTL} -w $1=$2 >> ${LOGFILE}

	return 0;
}


set_sysfs () {
	if [ ! -e $1 ]; then
		echo "Error: cannot find $1" >> ${LOGFILE}
		return 0;
	fi

	echo "$1 = $2" >> ${LOGFILE}
	echo "$2" > "$1" 2>> ${LOGFILE}

	return 0
}


insert_module () {
	if ! ${MODPROBE} -v "$1" >> ${LOGFILE} 2>&1; then
		echo "Cannot load module $1" | tee -a ${LOGFILE}
	fi

	return 0
}


remove_module () {
	${MODPROBE} -r -v "$@" >> ${LOGFILE} 2>&1

	return 0
}


######################################################################
# 
# main
#
######################################################################

do_start () {
	log_action_begin_msg "Starting $NAME"

	echo "Starting $NAME \"start\": " > ${LOGFILE}
	date >> ${LOGFILE}
	echo >> ${LOGFILE}


	#
	# Common settings
	#

	set_sysctl dev.wifi0.ledpin 1
	set_sysctl dev.wifi0.softled 1

	set_sysctl vm.swappiness 0
	set_sysctl vm.dirty_writeback_centisecs 1500


	#
	# Load power_save features on snd_hda_intel but only on 2.6.27 and
	# later. 2.6.24 kernels result in a dead soundcard after the power_save
	# value has elapsed.
	#
	# Enabling power_save with power_save_controller eliminates the need to
	# reload snd_hda_intel on suspend/resume and remove it on shutdown.
	#
	# Note: Other snd_hda_intel module options are now handled directly in
	# /etc/modprobe.d/eeepc
	#

	if isKernelLaterThanOrEqualTo "2.6.27"; then
		[ -e /sys/module/snd_hda_intel/parameters/power_save ] &&
			echo 10 > /sys/module/snd_hda_intel/parameters/power_save;
		[ -e /sys/module/snd_hda_intel/parameters/power_save_controller ] &&
			echo Y > /sys/module/snd_hda_intel/parameters/power_save_controller;
	fi


	#
	# Setup sane mixer levels for the front mic, speaker, etc. If a mixer
	# channel is not supported by a device, it is silently ignored.
	#

	# For HP Mini 110-1000, possibly other HP and Dell Minis
	set_amixer "Speaker" "100%" "unmute"
	set_amixer "Amp" "66%" "cap"
	set_amixer "Digital Input Source" "Analog Inputs"

	# For other devices like EeePC, Samsung
	set_amixer "LineOut" "100%" "unmute"
	set_amixer "Headphone" "100%" "unmute"
	set_amixer "PCM" "90%" "unmute"
	set_amixer "Master" "90%" "unmute"
	set_amixer "Input Source" "Front Mic"
	set_amixer "Capture" "90%" "cap" "unmute"
	set_amixer "Front Mic Boost" "30%" "unmute"
	set_amixer "Front Mic" "100%" "cap" "mute"
	set_amixer "Mic Boost" "30%" "unmute"
	set_amixer "Mic" "100%" "mute"


	#
	# Insert rfkill-input module for wifi / bluetooth control
	# Enable the wifi and bluetooth radios
	#

	insert_module rfkill-input
	if [ -d /sys/class/rfkill/rfkill[0-9] ]; then
		for dir in `ls -d /sys/class/rfkill/rfkill[0-9]`; do
			echo $dir/name == `cat $dir/name` >> ${LOGFILE}
			set_sysfs $dir/state 1
		done
	fi


	#
	# Enable the camera and cardreader
	#

	set_sysfs /sys/bus/platform/devices/eeepc/camera 1
	set_sysfs /sys/bus/platform/devices/eeepc/cardr 1


	#
	# Set other configuration options
	#

	if [ "${JNC_CPUFREQ_MIN_FREQ}" != "" ]; then
		for i in `find /sys/devices/system/cpu -name scaling_min_freq`; do
			if [ `cat $i` -lt ${JNC_CPUFREQ_MIN_FREQ} ]; then
				set_sysfs $i ${JNC_CPUFREQ_MIN_FREQ}
			fi
		done
	fi

	if [ "${JNC_CPUFREQ_GOVERNOR}" != "" ]; then
		for i in `find /sys/devices/system/cpu -name scaling_governor`; do
			set_sysfs $i ${JNC_CPUFREQ_GOVERNOR}
		done
	fi


	# finished

	echo "Finished $NAME \"start\": " >> ${LOGFILE}
	date >> ${LOGFILE}
	echo >> ${LOGFILE}

	log_action_end_msg $?
}


do_stop () {
	log_action_begin_msg "Stopping $NAME"

	# finished

	log_action_end_msg $?
}


case "$1" in
	start)
		do_start
		;;
	restart|reload|force-reload)
		do_stop
		do_start
		;;
	stop)
		do_stop
		;;
	*)
		echo "Usage: $0 [start|stop|restart|reload|force-reload]" >&2
		exit 3
		;;
esac

:

# vim:noexpandtab
